#激活哪一个环境的配置文件
#公共配置
spring:
  profiles:
    active: dev
  jackson:
    #时间格式化
    date-format: yyyy-MM-dd HH:mm:ss
    #json格式输出
    serialization:
      indent_output: true

  #thymeleaf start
  thymeleaf:
    mode: LEGACYHTML5
    encoding:  UTF-8
    content-type: text/html
  #thymeleaf end

  #自动创建|更新|验证数据库表结构
  #1.create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
  #2.create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
  #3.update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
  #4.validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: create
        #主要是指定生成表名的存储引擎为InneoDB
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    #是否打印出自动生产的SQL，方便调试的时候查看
    show-sql: true

#log start
logging:
  path: /user/local/log
  level:
    com:
      favorites: DEBUG
    org:
      springframework:
        web: INFO
      hibernate: ERROR
#log end



---
spring:
  profiles: dev
  #开发时关闭缓存,不然没法看到实时页面
  thymeleaf:
    cache: false
  #mysql start
  datasource:
    url: jdbc:mysql://localhost:3306/user
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
  #mysql end

#自定义配置 start
custom:
  name: mgx
  sex: 男
  age: 24
#自定义配置 end

---
spring:
  profiles: pro
  #生产时打开缓存
  thymeleaf:
    cache: true

#自定义配置 start
custom:
  name: mgx1
  sex: 男1
  age: 242
#自定义配置 end

  #mysql start
  datasource:
    url: jdbc:mysql://localhost:3306/user
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
  #mysql end


